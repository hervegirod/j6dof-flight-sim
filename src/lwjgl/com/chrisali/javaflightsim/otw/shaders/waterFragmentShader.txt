#version 400 core

in float visibility;
in vec4 clipSpace;
in vec2 textureCoordinates;

out vec4 out_Color;

uniform float waveFactor;
uniform float waveStrength;

uniform vec3 skyColor;
uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;
uniform sampler2D dudvMap;

void main(void) {

	vec2 ndc = (clipSpace.xy/clipSpace.w)/2.0 + 0.5;
	vec2 reflectionTextCoords = vec2(ndc.x, -ndc.y);
	vec2 refractionTextCoords = vec2(ndc.x,  ndc.y);
	
	vec2 distortion1 = (texture(dudvMap, vec2( textureCoordinates.x + waveFactor, textureCoordinates.y)).rg * 2.0 - 1.0) * waveStrength;
	vec2 distortion2 = (texture(dudvMap, vec2(-textureCoordinates.x + waveFactor, textureCoordinates.y + waveFactor)).rg * 2.0 - 1.0) * waveStrength;
	vec2 totalDistortion = distortion1 + distortion2;
	
	reflectionTextCoords += totalDistortion;
	reflectionTextCoords.x = clamp(reflectionTextCoords.x, 0.001, 0.999);
	reflectionTextCoords.y = clamp(reflectionTextCoords.y, -0.999, -0.001);
	
	refractionTextCoords += totalDistortion;
	refractionTextCoords = clamp(refractionTextCoords, 0.001, 0.999);

	vec4 reflectionColor = texture(reflectionTexture, reflectionTextCoords);
	vec4 refractionColor = texture(refractionTexture, refractionTextCoords);

	out_Color = mix(reflectionColor, refractionColor, 0.5);
	out_Color = mix(out_Color, vec4(0.0, 0.3, 0.5, 1.0), 0.2);
	out_Color = mix(vec4(skyColor,1.0), out_Color, visibility);

}